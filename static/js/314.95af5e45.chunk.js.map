{"version":3,"file":"static/js/314.95af5e45.chunk.js","mappings":"sNAGaA,EAAOC,EAAAA,EAAAA,GAAH,+CAIJC,GAAYD,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,0G,SCatB,EAjBkB,SAAC,GAAgB,IAAdG,EAAa,EAAbA,OACbC,GAAWC,EAAAA,EAAAA,MACjB,OACE,wBACGF,EAAOG,KAAI,SAAAC,GACV,OACE,SAACR,EAAD,WACE,SAACE,EAAD,CAAWO,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAArD,SACGG,EAAMK,OAASL,EAAMM,QAFfN,EAAME,GAMpB,KAGN,C,yKCfYK,GAAUd,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,+LAYPe,EAAOf,EAAAA,EAAAA,IAAH,mEAKJgB,EAAWhB,EAAAA,EAAAA,IAAH,6EAMRiB,GAAajB,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,mN,yMCxBVkB,E,QAAYlB,EAAAA,KAAH,2b,SC+DtB,EAxDmB,WACjB,OAAsCmB,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KACA,GAA0BN,EAAAA,EAAAA,UAAS,MAAnC,eAAOO,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,MAEAC,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACRC,EAAiB,mCAAG,WAAMC,GAAN,8EACxBR,GAAa,GADW,mBAGOS,EAAAA,EAAAA,IAAgBD,GAHvB,UAIe,KAD/BE,EAHgB,QAIHC,cAJG,uBAKpBb,EAAS,IALW,kBAMbc,IAAAA,OAAAA,QAAwB,qBANX,OAQtBd,EAASY,EAAeG,SARF,kDAUtBX,EAAS,EAAD,IACRY,QAAQb,MAAR,MAXsB,yBAatBD,GAAa,GAbS,6EAAH,sDAgBjBe,EAAW,UAAGX,EAAaY,IAAI,gBAApB,QAAgC,GAC7CD,GACFR,EAAkBQ,EAErB,GAAE,CAACX,IAWJ,OACE,UAAC,KAAD,WACGH,IAAS,uBAAG,uCACZF,IAAa,SAACkB,EAAA,EAAD,KACd,UAACxB,EAAD,CAAWyB,SAbM,SAAAC,GAEnB,GADAA,EAAEC,kBACGzB,EAAY0B,OACf,OAAOT,IAAAA,OAAAA,QAAwB,2BAEjCP,EAAgB,CAAEG,MAAOb,EAAY0B,SACrCzB,EAAe,GAChB,EAMG,WACE,kBACE0B,KAAK,OACLC,MAAO5B,EACP6B,SAAU,SAAAL,GAAC,OAAIvB,EAAeuB,EAAEM,OAAOF,MAA5B,KAEb,4BAAQ,cAEQ,IAAjB1B,EAAM6B,SAAgB,SAACC,EAAA,EAAD,CAAWjD,OAAQmB,MAG/C,C,mMC7DK+B,EAAW,gCACXC,EAAU,mCAEHC,EAAW,mCAAG,oGACFC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,oCACkBC,IAFhB,cACnBG,EADmB,yBAIlBA,EAASC,MAJS,2CAAH,qDAOXxB,EAAe,mCAAG,WAAMyB,GAAN,uFACNH,EAAAA,EAAAA,IAAA,UAClBH,EADkB,gCACcC,EADd,kBAC+BK,EAD/B,+CADM,cACvBF,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfE,EAAe,mCAAG,WAAMnD,GAAN,uFACN+C,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACD5C,EADC,oBACa6C,EADb,oBADM,cACvBG,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfG,EAAY,mCAAG,WAAMpD,GAAN,uFACH+C,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACD5C,EADC,4BACqB6C,EADrB,oBADG,cACpBG,EADoB,yBAInBA,EAASC,MAJU,2CAAH,sDAOZI,EAAe,mCAAG,WAAMrD,GAAN,uFACN+C,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACD5C,EADC,4BACqB6C,EADrB,oBADM,cACvBG,EADuB,yBAItBA,EAASC,MAJa,2CAAH,qD","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","pages/DetailsPage.styled.js","pages/SearchPage.styled.js","pages/SearchPage.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Item = styled.li`\n  list-style: circle;\n`;\n\nexport const LinkStyle = styled(Link)`\n  color: black;\n  text-decoration: none;\n  &:hover {\n    color: #cd5c5c;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport { Item, LinkStyle } from './MovieList.styled';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map(movie => {\n        return (\n          <Item key={movie.id}>\n            <LinkStyle to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title || movie.name}\n            </LinkStyle>\n          </Item>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default MovieList;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const BtnBack = styled(Link)`\n  padding: 3px 5px;\n  border-radius: 5px;\n  text-decoration: none;\n  color: black;\n  border: 1px solid black;\n\n  &:hover {\n    background-color: #b0c4de;\n  }\n`;\n\nexport const Wrap = styled.div`\n  margin-top: 20px;\n  margin-left: 50px;\n`;\n\nexport const WrapCard = styled.div`\n  margin-top: 20px;\n  display: flex;\n  gap: 10px;\n`;\n\nexport const DetailsBtn = styled(Link)`\n  padding: 3px 5px;\n  border-radius: 5px;\n  text-decoration: none;\n  color: black;\n  border: 1px solid black;\n  margin-left: 5px;\n\n  &:hover {\n    background-color: #b0c4de;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const FormStyle = styled.form`\n  display: flex;\n  gap: 5px;\n\n  input {\n    width: 200px;\n    height: 20px;\n    border-color: black;\n    border-radius: 8px;\n    padding: 3px;\n  }\n\n  button {\n    padding: 3px 15px;\n    border-radius: 7px;\n    border: 1px solid black;\n    background-color: black;\n    color: white;\n    cursor: pointer;\n\n    &:hover,\n    &:focus {\n      background-color: #b0c4de;\n      color: black;\n    }\n  }\n`;\n","import { Loader } from 'components/Loader/Loader';\nimport MovieList from 'components/MovieList/MovieList';\nimport Notiflix from 'notiflix';\nimport React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getSearchMovies } from 'services/api';\nimport { Wrap } from './DetailsPage.styled';\nimport { FormStyle } from './SearchPage.styled';\n\nconst SearchPage = () => {\n  const [searchInput, setSearchInput] = useState('');\n  const [films, setFilms] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const fetchSearchMovies = async query => {\n      setIsLoading(true);\n      try {\n        const searchFilmData = await getSearchMovies(query);\n        if (searchFilmData.total_results === 0) {\n          setFilms([]);\n          return Notiflix.Notify.failure('Movie not found!');\n        }\n        setFilms(searchFilmData.results);\n      } catch (error) {\n        setError(error);\n        console.error(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const searchQuery = searchParams.get('query') ?? '';\n    if (searchQuery) {\n      fetchSearchMovies(searchQuery);\n    }\n  }, [searchParams]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!searchInput.trim()) {\n      return Notiflix.Notify.failure('Please, write something');\n    }\n    setSearchParams({ query: searchInput.trim() });\n    setSearchInput('');\n  };\n\n  return (\n    <Wrap>\n      {error && <p>Opps...Sorry, something went wrong</p>}\n      {isLoading && <Loader />}\n      <FormStyle onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={searchInput}\n          onChange={e => setSearchInput(e.target.value)}\n        />\n        <button>Search</button>\n      </FormStyle>\n      {films.length !== 0 && <MovieList movies={films} />}\n    </Wrap>\n  );\n};\n\nexport default SearchPage;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'f9adb863f28a1c6f9debce9b06843390';\n\nexport const getTrending = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/all/day?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const getSearchMovies = async searchValue => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${searchValue}&include_adult=false&language=en-US&page=1`\n  );\n  return response.data;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n"],"names":["Item","styled","LinkStyle","Link","movies","location","useLocation","map","movie","to","id","state","from","title","name","BtnBack","Wrap","WrapCard","DetailsBtn","FormStyle","useState","searchInput","setSearchInput","films","setFilms","isLoading","setIsLoading","error","setError","useSearchParams","searchParams","setSearchParams","useEffect","fetchSearchMovies","query","getSearchMovies","searchFilmData","total_results","Notiflix","results","console","searchQuery","get","Loader","onSubmit","e","preventDefault","trim","type","value","onChange","target","length","MovieList","BASE_URL","API_KEY","getTrending","axios","response","data","searchValue","getMovieDetails","getMovieCast","getMovieReviews"],"sourceRoot":""}