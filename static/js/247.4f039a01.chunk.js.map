{"version":3,"file":"static/js/247.4f039a01.chunk.js","mappings":"6PA4DA,UAtDa,WACX,OAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAoBR,OAlBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,oGAEnBN,GAAa,GAFM,UAGIO,EAAAA,EAAAA,IAAaJ,GAHjB,UAIG,KADhBK,EAHa,QAINC,KAJM,yCAKVC,IAAAA,OAAAA,QAAwB,oBALd,OAOnBZ,EAASU,EAASC,MAPC,kDASnBP,EAAS,EAAD,IATW,yBAWnBF,GAAa,GAXM,6EAAH,qDAcpBM,GACD,GAAE,CAACH,KAGF,gCACGJ,IAAa,SAAC,IAAD,IACbE,IAAS,uBAAG,uCACZJ,EAAMc,OAAS,GACd,wBACGd,EAAMe,KAAI,SAAAH,GACT,OACE,2BACE,gBACEI,IACM,OAAJJ,QAAI,IAAJA,GAAAA,EAAMK,aAAN,yCACsCL,EAAKK,cACvC,sCAENC,IAAKN,EAAKO,QAEZ,uBAAIP,EAAKO,QACT,yBAAG,aAAWP,EAAKQ,eAVZR,EAAKS,GAajB,OAGH,uBAAG,qDAIV,C,mMCxDKC,EAAW,gCACXC,EAAU,mCAEHC,EAAW,mCAAG,oGACFC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,oCACkBC,IAFhB,cACnBG,EADmB,yBAIlBA,EAASC,MAJS,2CAAH,qDAOXC,EAAe,mCAAG,WAAMC,GAAN,uFACNJ,EAAAA,EAAAA,IAAA,UAClBH,EADkB,gCACcC,EADd,kBAC+BM,EAD/B,+CADM,cACvBH,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfG,EAAe,mCAAG,WAAMT,GAAN,uFACNI,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDD,EADC,oBACaE,EADb,oBADM,cACvBG,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfjB,EAAY,mCAAG,WAAMW,GAAN,uFACHI,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDD,EADC,4BACqBE,EADrB,oBADG,cACpBG,EADoB,yBAInBA,EAASC,MAJU,2CAAH,sDAOZI,EAAe,mCAAG,WAAMV,GAAN,uFACNI,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDD,EADC,4BACqBE,EADrB,oBADM,cACvBG,EADuB,yBAItBA,EAASC,MAJa,2CAAH,qD","sources":["components/Cast/Cast.jsx","services/api.js"],"sourcesContent":["import { Loader } from 'components/Loader/Loader';\nimport Notiflix from 'notiflix';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast } from 'services/api';\n\nconst Cast = () => {\n  const [casts, setCasts] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchMovieCast = async () => {\n      try {\n        setIsLoading(true);\n        const castData = await getMovieCast(movieId);\n        if (castData.cast === 0) {\n          return Notiflix.Notify.failure('Cast not found!');\n        }\n        setCasts(castData.cast);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovieCast();\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error && <p>Opps...Sorry, something went wrong</p>}\n      {casts.length > 0 ? (\n        <ul>\n          {casts.map(cast => {\n            return (\n              <li key={cast.id}>\n                <img\n                  src={\n                    cast?.profile_path\n                      ? `https://image.tmdb.org/t/p/w200${cast.profile_path}`\n                      : 'https://via.placeholder.com/200x300'\n                  }\n                  alt={cast.name}\n                />\n                <p>{cast.name}</p>\n                <p>Character:{cast.character}</p>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <p>Sorry! We don't have any casts for this movie.</p>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'f9adb863f28a1c6f9debce9b06843390';\n\nexport const getTrending = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/all/day?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const getSearchMovies = async searchValue => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${searchValue}&include_adult=false&language=en-US&page=1`\n  );\n  return response.data;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n"],"names":["useState","casts","setCasts","isLoading","setIsLoading","error","setError","movieId","useParams","useEffect","fetchMovieCast","getMovieCast","castData","cast","Notiflix","length","map","src","profile_path","alt","name","character","id","BASE_URL","API_KEY","getTrending","axios","response","data","getSearchMovies","searchValue","getMovieDetails","getMovieReviews"],"sourceRoot":""}