{"version":3,"file":"static/js/693.c5aac8ca.chunk.js","mappings":"sNAGaA,EAAOC,EAAAA,EAAAA,GAAH,+CAIJC,GAAYD,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,0G,SCatB,EAjBkB,SAAC,GAAgB,IAAdG,EAAa,EAAbA,OACbC,GAAWC,EAAAA,EAAAA,MACjB,OACE,wBACGF,EAAOG,KAAI,SAAAC,GACV,OACE,SAACR,EAAD,WACE,SAACE,EAAD,CAAWO,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAArD,SACGG,EAAMK,OAASL,EAAMM,QAFfN,EAAME,GAMpB,KAGN,C,qLChBYK,E,QAAOd,EAAAA,IAAH,8C,SCuCjB,EAlCiB,WACf,OAA4Be,EAAAA,EAAAA,UAAS,IAArC,eAAOZ,EAAP,KAAea,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KAqBA,OAnBAC,EAAAA,EAAAA,YAAU,WACRH,GAAa,GACb,IACE,IAAMI,EAAW,mCAAG,uGACKC,EAAAA,EAAAA,MADL,OACZC,EADY,OAGI,KADhBrB,EAASqB,EAASC,SACbC,QACTC,IAAAA,OAAAA,QAAwB,oCAE1BX,EAAUb,GANQ,2CAAH,qDAQjBmB,GAKD,CAJC,MAAOH,GACPC,EAASD,EACV,CAZD,QAaED,GAAa,EACd,CACF,GAAE,KAGD,UAACJ,EAAD,YACE,wBAAI,mBACHG,IAAa,SAACW,EAAA,EAAD,IACbzB,EAAOuB,OAAS,IAAK,SAACG,EAAA,EAAD,CAAW1B,OAAQA,IACxCgB,IAAS,uBAAG,oBAGlB,C,mMCrCKW,EAAW,gCACXC,EAAU,mCAEHR,EAAW,mCAAG,oGACFS,EAAAA,EAAAA,IAAA,UAClBF,EADkB,oCACkBC,IAFhB,cACnBP,EADmB,yBAIlBA,EAASS,MAJS,2CAAH,qDAOXC,EAAe,mCAAG,WAAMC,GAAN,uFACNH,EAAAA,EAAAA,IAAA,UAClBF,EADkB,gCACcC,EADd,kBAC+BI,EAD/B,+CADM,cACvBX,EADuB,yBAItBA,EAASS,MAJa,2CAAH,sDAOfG,EAAe,mCAAG,WAAM3B,GAAN,uFACNuB,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDrB,EADC,oBACasB,EADb,oBADM,cACvBP,EADuB,yBAItBA,EAASS,MAJa,2CAAH,sDAOfI,EAAY,mCAAG,WAAM5B,GAAN,uFACHuB,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDrB,EADC,4BACqBsB,EADrB,oBADG,cACpBP,EADoB,yBAInBA,EAASS,MAJU,2CAAH,sDAOZK,EAAe,mCAAG,WAAM7B,GAAN,uFACNuB,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDrB,EADC,4BACqBsB,EADrB,oBADM,cACvBP,EADuB,yBAItBA,EAASS,MAJa,2CAAH,qD","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","pages/HomePage.styled.js","pages/HomePage.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Item = styled.li`\n  list-style: circle;\n`;\n\nexport const LinkStyle = styled(Link)`\n  color: black;\n  text-decoration: none;\n  &:hover {\n    color: #cd5c5c;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport { Item, LinkStyle } from './MovieList.styled';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map(movie => {\n        return (\n          <Item key={movie.id}>\n            <LinkStyle to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title || movie.name}\n            </LinkStyle>\n          </Item>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default MovieList;\n","import styled from '@emotion/styled';\n\nexport const Wrap = styled.div`\n  margin-left: 50px;\n`;\n","import { Loader } from 'components/Loader/Loader';\nimport MovieList from 'components/MovieList/MovieList';\nimport Notiflix from 'notiflix';\nimport React, { useEffect, useState } from 'react';\nimport { getTrending } from 'services/api';\nimport { Wrap } from './HomePage.styled';\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setIsLoading(true);\n    try {\n      const fetchMovies = async () => {\n        const response = await getTrending();\n        const movies = response.results;\n        if (movies.length === 0) {\n          Notiflix.Notify.failure('Nothing found. Please try again!');\n        }\n        setMovies(movies);\n      };\n      fetchMovies();\n    } catch (error) {\n      setError(error);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  return (\n    <Wrap>\n      <h1>Trending today</h1>\n      {isLoading && <Loader />}\n      {movies.length > 0 && <MovieList movies={movies} />}\n      {error && <p>Nothing found</p>}\n    </Wrap>\n  );\n};\n\nexport default HomePage;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'f9adb863f28a1c6f9debce9b06843390';\n\nexport const getTrending = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/all/day?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const getSearchMovies = async searchValue => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${searchValue}&include_adult=false&language=en-US&page=1`\n  );\n  return response.data;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n"],"names":["Item","styled","LinkStyle","Link","movies","location","useLocation","map","movie","to","id","state","from","title","name","Wrap","useState","setMovies","isLoading","setIsLoading","error","setError","useEffect","fetchMovies","getTrending","response","results","length","Notiflix","Loader","MovieList","BASE_URL","API_KEY","axios","data","getSearchMovies","searchValue","getMovieDetails","getMovieCast","getMovieReviews"],"sourceRoot":""}