{"version":3,"file":"static/js/769.1c668723.chunk.js","mappings":"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","sources":["pages/DetailsPage.jsx","pages/DetailsPage.styled.js","services/api.js"],"sourcesContent":["import React, { Suspense, useEffect, useRef, useState } from 'react';\nimport { getMovieDetails } from 'services/api';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { Loader } from 'components/Loader/Loader';\nimport Notiflix from 'notiflix';\nimport { BtnBack, DetailsBtn, Wrap, WrapCard } from './DetailsPage.styled';\n\nconst DetailsPage = () => {\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    if (!movieId) return;\n    setIsLoading(true);\n\n    const fetchSearchMovies = async () => {\n      try {\n        const movieData = await getMovieDetails(movieId);\n        setMovieDetails(movieData);\n        Notiflix.Notify.success('Success');\n        if (movieData.length === null) {\n          return Notiflix.Notify.failure('Something went wrong');\n        }\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchSearchMovies();\n  }, [movieId]);\n\n  return (\n    <Wrap>\n      {isLoading && <Loader />}\n      {error && <p>Opps...Sorry, something went wrong</p>}\n      <BtnBack to={backLinkLocationRef.current}>Go back</BtnBack>\n      {movieDetails !== null && (\n        <div>\n          <WrapCard>\n            {/* <Link to={backLinkLocationRef.current}>Go back</Link> */}\n            <img\n              src={\n                movieDetails?.poster_path\n                  ? `https://image.tmdb.org/t/p/w200${movieDetails.poster_path}`\n                  : 'https://via.placeholder.com/200x300'\n              }\n              alt={movieDetails.original_title}\n            />\n            <div>\n              <h2>{movieDetails.title}</h2>\n              <p>User Score: {movieDetails.vote_average * 10}%</p>\n              <h2>Overview</h2>\n              <p>{movieDetails.overview}</p>\n              <h2>Genres</h2>\n              <p>{movieDetails.genres.map(genre => genre.name).join(' ')}</p>\n            </div>\n          </WrapCard>\n          <div>\n            <h3>Additional information</h3>\n            <DetailsBtn to=\"cast\">Cast</DetailsBtn>\n            <DetailsBtn to=\"reviews\">Reviews</DetailsBtn>\n          </div>\n          <Suspense fallback={<Loader />}>\n            <Outlet />\n          </Suspense>\n        </div>\n      )}\n    </Wrap>\n  );\n};\n\nexport default DetailsPage;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const BtnBack = styled(Link)`\n  padding: 3px 5px;\n  border-radius: 5px;\n  text-decoration: none;\n  color: black;\n  border: 1px solid black;\n  //   margin-left: 50px;\n\n  &:hover {\n    background-color: #483d8b;\n    color: white;\n  }\n`;\n\nexport const Wrap = styled.div`\n  margin-top: 20px;\n  margin-left: 50px;\n  //   display: flex;\n`;\n\nexport const WrapCard = styled.div`\n  margin-top: 20px;\n  display: flex;\n  gap: 10px;\n  //   flex-direction: column;\n`;\n\nexport const DetailsBtn = styled(Link)`\n  padding: 3px 5px;\n  border-radius: 5px;\n  text-decoration: none;\n  color: black;\n  border: 1px solid black;\n  //   margin-left: 50px;\n  margin-left: 5px;\n\n  &:hover {\n    background-color: #483d8b;\n    color: white;\n  }\n`;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'f9adb863f28a1c6f9debce9b06843390';\n\nexport const getTrending = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/all/day?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const getSearchMovies = async searchValue => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${searchValue}&include_adult=false&language=en-US&page=1`\n  );\n  return response.data;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n"],"names":["useState","movieDetails","setMovieDetails","isLoading","setIsLoading","error","setError","movieId","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","fetchSearchMovies","getMovieDetails","movieData","Notiflix","length","to","current","src","poster_path","alt","original_title","title","vote_average","overview","genres","map","genre","name","join","Suspense","fallback","BtnBack","styled","Link","Wrap","WrapCard","DetailsBtn","BASE_URL","API_KEY","getTrending","axios","response","data","getSearchMovies","searchValue","id","getMovieCast","getMovieReviews"],"sourceRoot":""}